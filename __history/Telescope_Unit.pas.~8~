unit Telescope_Unit;

{$WARN SYMBOL_PLATFORM OFF}

interface

uses
  ComObj, ActiveX, PIAZ_TLB, StdVcl;

type
  TTelescope = class(TAutoObject, ITelescope)
  protected
    procedure AbortSlew; safecall;
    function AxisRates(Axis: TelescopeAxes): IAxisRates; safecall;
    function CanMoveAxis(Axe: TelescopeAxes): WordBool; safecall;
    function Get_AlignmentMode: AlignmentModes; safecall;
    function Get_Altitude: Double; safecall;
    function Get_ApertureArea: Double; safecall;
    function Get_ApertureDiameter: Double; safecall;
    function Get_AtHome: WordBool; safecall;
    function Get_AtPark: WordBool; safecall;
    function Get_Azimuth: Double; safecall;
    function Get_CanFindHome: WordBool; safecall;
    function Get_CanPark: WordBool; safecall;
    function Get_CanPulseGuide: WordBool; safecall;
    function Get_CanSetDeclinationRate: WordBool; safecall;
    function Get_CanSetGuideRates: WordBool; safecall;
    function Get_CanSetPark: WordBool; safecall;
    function Get_CanSetPierSide: WordBool; safecall;
    function Get_CanSetRightAscensionRate: WordBool; safecall;
    function Get_CanSetTracking: WordBool; safecall;
    function Get_CanSlew: WordBool; safecall;
    function Get_CanSlewAltAz: WordBool; safecall;
    function Get_CanSlewAltAzAsync: WordBool; safecall;
    function Get_CanSlewAsync: WordBool; safecall;
    function Get_CanSync: WordBool; safecall;
    function Get_CanSyncAltAz: WordBool; safecall;
    function Get_CanUnpark: WordBool; safecall;
    function Get_Connected: WordBool; safecall;
    function Get_Declination: Double; safecall;
    function Get_DeclinationRate: Double; safecall;
    function Get_Description: WideString; safecall;
    function Get_DestinationSideOfPier(RightAscension, Declination: Double): PierSide;
          safecall;
    function Get_DoesRefraction: WordBool; safecall;
    function Get_DriverInfo: WideString; safecall;
    function Get_DriverVersion: WideString; safecall;
    function Get_EquatorialSystem: EquatorialCoordinateType; safecall;
    function Get_FocalLength: Double; safecall;
    function Get_GuideRateDeclination: Double; safecall;
    function Get_GuideRateRightAscension: Double; safecall;
    function Get_InterfaceVersion: Integer; safecall;
    function Get_IsPulseGuiding: WordBool; safecall;
    function Get_Name: WideString; safecall;
    function Get_PECCodeur: Integer; safecall;
    function Get_RawPositionAlpha_arcsecCodeurs: Double; safecall;
    function Get_RawPositionAlphaInit_arcsecCodeurs: Double; safecall;
    function Get_RawPositionDelta_arcsecCodeurs: Double; safecall;
    function Get_RawPositionDeltaInit_arcsecCodeurs: Double; safecall;
    function Get_RightAscension: Double; safecall;
    function Get_RightAscensionRate: Double; safecall;
    function Get_SideOfPier: Integer; safecall;
    function Get_SiderealTime: Double; safecall;
    function Get_SiteElevation: Double; safecall;
    function Get_SiteLatitude: Double; safecall;
    function Get_SiteLongitude: Double; safecall;
    function Get_Slewing: WordBool; safecall;
    function Get_SlewSettleTime: Integer; safecall;
    function Get_SupportedActions: OleVariant; safecall;
    function Get_TargetDeclination: Double; safecall;
    function Get_TargetRightAscension: Double; safecall;
    function Get_Tracking: WordBool; safecall;
    function Get_TrackingRate: Integer; safecall;
    function Get_TrackingRates: ITrackingRatesCol; safecall;
    function Get_UTCDate: TDateTime; safecall;
    procedure CommandBlind; safecall;
    procedure CommandBool; safecall;
    procedure CommandString; safecall;
    procedure FindHome; safecall;
    procedure MoveAxis(Axe: TelescopeAxes; Rate: Double); safecall;
    procedure Park; safecall;
    procedure PulseGuide(Direction: GuideDirections; Duration: Integer); safecall;
    procedure Set_Connected(Value: WordBool); safecall;
    procedure Set_DeclinationRate(Value: Double); safecall;
    procedure Set_DoesRefraction(Value: WordBool); safecall;
    procedure Set_GuideRateDeclination(Value: Double); safecall;
    procedure Set_GuideRateRightAscension(Value: Double); safecall;
    procedure Set_RightAscensionRate(Value: Double); safecall;
    procedure Set_SideOfPier(Value: Integer); safecall;
    procedure Set_SiteElevation(Value: Double); safecall;
    procedure Set_SiteLatitude(Value: Double); safecall;
    procedure Set_SiteLongitude(Value: Double); safecall;
    procedure Set_SlewSettleTime(Value: Integer); safecall;
    procedure Set_TargetDeclination(Value: Double); safecall;
    procedure Set_TargetRightAscension(Value: Double); safecall;
    procedure Set_Tracking(Value: WordBool); safecall;
    procedure Set_TrackingRate(Value: Integer); safecall;
    procedure Set_UTCDate(Value: TDateTime); safecall;
    procedure SetPark; safecall;
    procedure SetupDialog; safecall;
    procedure SlewToAltAz; safecall;
    procedure SlewToAltAzAsync; safecall;
    procedure SlewToCoordinates(RightAscension, Declination: Double); safecall;
    procedure SlewToCoordinatesAsync(RightAscension, Declination: Double); safecall;
    procedure SlewToTarget; safecall;
    procedure SlewToTargetAsync; safecall;
    procedure SyncToAltAz; safecall;
    procedure SyncToCoordinates(RightAscension, Declination: Double); safecall;
    procedure SyncToTarget; safecall;
    procedure Unpark; safecall;

  end;

implementation

uses ComServ,dialogs,Utils,Core,Variable_Unit;

procedure TTelescope.AbortSlew;
begin

end;

function TTelescope.AxisRates(Axis: TelescopeAxes): IAxisRates;
begin

end;

function TTelescope.CanMoveAxis(Axe: TelescopeAxes): WordBool;
begin

end;

function TTelescope.Get_AlignmentMode: AlignmentModes;
begin

end;

function TTelescope.Get_Altitude: Double;
begin

end;

function TTelescope.Get_ApertureArea: Double;
begin

end;

function TTelescope.Get_ApertureDiameter: Double;
begin

end;

function TTelescope.Get_AtHome: WordBool;
begin

end;

function TTelescope.Get_AtPark: WordBool;
begin

end;

function TTelescope.Get_Azimuth: Double;
begin

end;

function TTelescope.Get_CanFindHome: WordBool;
begin

end;

function TTelescope.Get_CanPark: WordBool;
begin

end;

function TTelescope.Get_CanPulseGuide: WordBool;
begin

end;

function TTelescope.Get_CanSetDeclinationRate: WordBool;
begin

end;

function TTelescope.Get_CanSetGuideRates: WordBool;
begin

end;

function TTelescope.Get_CanSetPark: WordBool;
begin

end;

function TTelescope.Get_CanSetPierSide: WordBool;
begin

end;

function TTelescope.Get_CanSetRightAscensionRate: WordBool;
begin

end;

function TTelescope.Get_CanSetTracking: WordBool;
begin

end;

function TTelescope.Get_CanSlew: WordBool;
begin

end;

function TTelescope.Get_CanSlewAltAz: WordBool;
begin

end;

function TTelescope.Get_CanSlewAltAzAsync: WordBool;
begin

end;

function TTelescope.Get_CanSlewAsync: WordBool;
begin

end;

function TTelescope.Get_CanSync: WordBool;
begin

end;

function TTelescope.Get_CanSyncAltAz: WordBool;
begin

end;

function TTelescope.Get_CanUnpark: WordBool;
begin

end;

function TTelescope.Get_Connected: WordBool;
Const
  procName='Get_Connected';
begin
  LogEnterProc(procName);
  result:=fConnected;
  LogEndProc(procName);
end;

function TTelescope.Get_Declination: Double;
Const
  procName='Get_Declination';
begin
  LogEnterProc(procName);
  result:=Get_Declination_Core;
  LogEndProc(procName);
end;

function TTelescope.Get_DeclinationRate: Double;
begin

end;

function TTelescope.Get_Description: WideString;
begin

end;

function TTelescope.Get_DestinationSideOfPier(RightAscension, Declination: Double): PierSide;

begin

end;

function TTelescope.Get_DoesRefraction: WordBool;
begin

end;

function TTelescope.Get_DriverInfo: WideString;
begin

end;

function TTelescope.Get_DriverVersion: WideString;
begin

end;

function TTelescope.Get_EquatorialSystem: EquatorialCoordinateType;
begin

end;

function TTelescope.Get_FocalLength: Double;
begin

end;

function TTelescope.Get_GuideRateDeclination: Double;
begin

end;

function TTelescope.Get_GuideRateRightAscension: Double;
begin

end;

function TTelescope.Get_InterfaceVersion: Integer;
begin

end;

function TTelescope.Get_IsPulseGuiding: WordBool;
begin

end;

function TTelescope.Get_Name: WideString;
begin

end;

function TTelescope.Get_PECCodeur: Integer;
begin

end;

function TTelescope.Get_RawPositionAlpha_arcsecCodeurs: Double;
begin

end;

function TTelescope.Get_RawPositionAlphaInit_arcsecCodeurs: Double;
begin

end;

function TTelescope.Get_RawPositionDelta_arcsecCodeurs: Double;
begin

end;

function TTelescope.Get_RawPositionDeltaInit_arcsecCodeurs: Double;
begin

end;

function TTelescope.Get_RightAscension: Double;
Const
  procName='Get_RightAscension';
begin
  LogEnterProc(procName);
  result:=Get_RightAscension_Core;
  LogEndProc(procName);
end;

function TTelescope.Get_RightAscensionRate: Double;
begin

end;

function TTelescope.Get_SideOfPier: Integer;
begin

end;

function TTelescope.Get_SiderealTime: Double;
begin

end;

function TTelescope.Get_SiteElevation: Double;
begin

end;

function TTelescope.Get_SiteLatitude: Double;
begin

end;

function TTelescope.Get_SiteLongitude: Double;
begin

end;

function TTelescope.Get_Slewing: WordBool;
begin

end;

function TTelescope.Get_SlewSettleTime: Integer;
begin

end;

function TTelescope.Get_SupportedActions: OleVariant;
begin

end;

function TTelescope.Get_TargetDeclination: Double;
begin

end;

function TTelescope.Get_TargetRightAscension: Double;
begin

end;

function TTelescope.Get_Tracking: WordBool;
begin

end;

function TTelescope.Get_TrackingRate: Integer;
begin

end;

function TTelescope.Get_TrackingRates: ITrackingRatesCol;
begin

end;

function TTelescope.Get_UTCDate: TDateTime;
begin

end;

procedure TTelescope.CommandBlind;
begin

end;

procedure TTelescope.CommandBool;
begin

end;

procedure TTelescope.CommandString;
begin

end;

procedure TTelescope.FindHome;
begin

end;

procedure TTelescope.MoveAxis(Axe: TelescopeAxes; Rate: Double);
begin

end;

procedure TTelescope.Park;
begin

end;

procedure TTelescope.PulseGuide(Direction: GuideDirections; Duration: Integer);
begin

end;

procedure TTelescope.Set_Connected(Value: WordBool);
Const
  procName='Set_Connected';
begin
  LogEnterProc(procName);
  Set_Connected_Core(Value);
  LogEndProc(procName);
end;

procedure TTelescope.Set_DeclinationRate(Value: Double);
begin

end;

procedure TTelescope.Set_DoesRefraction(Value: WordBool);
begin

end;

procedure TTelescope.Set_GuideRateDeclination(Value: Double);
begin

end;

procedure TTelescope.Set_GuideRateRightAscension(Value: Double);
begin

end;

procedure TTelescope.Set_RightAscensionRate(Value: Double);
begin

end;

procedure TTelescope.Set_SideOfPier(Value: Integer);
begin

end;

procedure TTelescope.Set_SiteElevation(Value: Double);
begin

end;

procedure TTelescope.Set_SiteLatitude(Value: Double);
begin

end;

procedure TTelescope.Set_SiteLongitude(Value: Double);
begin

end;

procedure TTelescope.Set_SlewSettleTime(Value: Integer);
begin

end;

procedure TTelescope.Set_TargetDeclination(Value: Double);
begin

end;

procedure TTelescope.Set_TargetRightAscension(Value: Double);
begin

end;

procedure TTelescope.Set_Tracking(Value: WordBool);
begin

end;

procedure TTelescope.Set_TrackingRate(Value: Integer);
begin

end;

procedure TTelescope.Set_UTCDate(Value: TDateTime);
begin

end;

procedure TTelescope.SetPark;
begin

end;

procedure TTelescope.SetupDialog;
Const
  procName='SetupDialog';
begin
  LogEnterProc(procName);
  SetupDialog_Core;
  LogEndProc(procName);
end;

procedure TTelescope.SlewToAltAz;
begin

end;

procedure TTelescope.SlewToAltAzAsync;
begin

end;

procedure TTelescope.SlewToCoordinates(RightAscension, Declination: Double);
begin

end;

procedure TTelescope.SlewToCoordinatesAsync(RightAscension, Declination: Double);

begin

end;

procedure TTelescope.SlewToTarget;
begin

end;

procedure TTelescope.SlewToTargetAsync;
begin

end;

procedure TTelescope.SyncToAltAz;
begin

end;

procedure TTelescope.SyncToCoordinates(RightAscension, Declination: Double);
begin

end;

procedure TTelescope.SyncToTarget;
begin

end;

procedure TTelescope.Unpark;
begin

end;

initialization
  TAutoObjectFactory.Create(ComServer, TTelescope, Class_Telescope,
    ciMultiInstance, tmApartment);
end.
